// Reduce the paddings, margins, and UI of inner-blocks.
// @todo: eventually we may add a feature that lets a parent container absorb the block UI of a child block.
// When that happens, leverage that instead of the following overrides.
[data-type="core/navigation"] {

	.wp-block-navigation .block-editor-inner-blocks {
		flex: 1; // expand to fill available space required for justification
	}

	// 1. Reset margins on immediate innerblocks container.
	.wp-block-navigation .block-editor-inner-blocks > .block-editor-block-list__layout {
		margin-left: 0;
		margin-right: 0;
	}

	.wp-block-navigation.items-justification-left .block-editor-inner-blocks > .block-editor-block-list__layout {
		justify-content: flex-start;
	}

	.wp-block-navigation.items-justification-center .block-editor-inner-blocks > .block-editor-block-list__layout {
		justify-content: center;
	}

	.wp-block-navigation.items-justification-right .block-editor-inner-blocks > .block-editor-block-list__layout {
		justify-content: flex-end;
	}

	// 2. Remove paddings on subsequent immediate children.
	.wp-block-navigation .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block {
		width: auto;
		padding-left: 0;
		padding-right: 0;
		margin-left: 0;
		margin-right: 0;
		margin-bottom: 1em; // Useful for when items wrap.
	}

	// 3. Remove vertical margins on subsequent block container.
	.wp-block-navigation .block-editor-inner-blocks > .block-editor-block-list__layout .wp-block > [data-block] {
		margin-top: 0;
		margin-bottom: 0;
	}

	.wp-block-navigation .block-editor-block-list__block::before {
		left: 0;
		right: 0;
	}

	// Remove the dashed outlines for child blocks.
	&.is-hovered .wp-block-navigation .block-editor-block-list__block::before,
	&.is-selected .wp-block-navigation .block-editor-block-list__block::before,
	&.has-child-selected .wp-block-navigation .block-editor-block-list__block::before {
		border-color: transparent !important; // !important used to keep the selector from growing any more complex.
	}

	// Hide the sibling inserter.
	.wp-block-navigation .block-editor-block-list__insertion-point {
		display: none;
	}

	// Polish the Appender.
	.wp-block-navigation .block-list-appender {
		margin: 0;

		.block-editor-button-block-appender {
			padding: $grid-size;
			outline: none;
			background: none;
		}
	}
}

.wp-block-navigation .block-editor-block-list__layout,
.wp-block-navigation {
	display: flex;
	flex-wrap: wrap;
}

.wp-block-navigation__inserter-content {
	padding: $grid-size-large;
}

/*
 * Adjust Navigation Item.
 */
.wp-block-navigation .wp-block-navigation-link {
	margin-right: $grid-size;
	margin-left: $grid-size;

	.block-editor-block-list__layout {
		display: block;
		margin: $grid-size;
	}

	// Provide a base navigation item margin.
	// This should be the same inside the field,
	// and the edit container should compensate.
	// This is to make sure the edit and view are the same.
	padding: 0 $grid-size;

	// Only display inner blocks when the block is being edited.
	.block-editor-inner-blocks {
		display: none;
	}

	&.is-editing .block-editor-inner-blocks {
		display: block;
	}
}

/**
 * Colors Selector component
 */
$colors-selector-size: 22px;
.block-library-colors-selector {
	width: auto;

	// Toolbar colors-selector button.
	.block-library-colors-selector__toggle {
		display: block;
		margin: 0 auto;
		padding: 3px;
		width: auto;
	}

	// Button container.
	.block-library-colors-selector__icon-container {
		width: 42px;
		height: 30px;
		position: relative;
		margin: 0 auto;
		padding: 3px;
		display: flex;
		align-items: center;
		border-radius: 4px;

		// Add the button arrow.
		&::after {
			@include dropdown-arrow();
		}

		// Styling button states.
		&:focus,
		&:hover {
			color: $dark-gray-500;
			box-shadow: inset 0 0 0 1px $dark-gray-500, inset 0 0 0 2px #fff;
		}
	}

	// colors-selector - selection status.
	.block-library-colors-selector__state-selection {
		border-radius: $colors-selector-size / 2;
		box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.2);

		width: $colors-selector-size;
		min-width: $colors-selector-size;
		height: $colors-selector-size;
		min-height: $colors-selector-size;
		line-height: ($colors-selector-size - 2);
		padding: 2px;

		// Styling icon color.
		&.has-text-color {
			> svg,
			> svg path {
				color: inherit;
			}
		}
	}
}

// Colors Selector Popover.
$color-control-label-height: 20px;
.block-library-colors-selector__popover {
	.color-palette-controller-container {
		padding: 16px;
	}

	.components-base-control__label {
		height: $color-control-label-height;
		line-height: $color-control-label-height;
	}

	.component-color-indicator {
		float: right;
		margin-top: 2px;
	}
}

.block-editor-block-mover {
	&.is-horizontal {
		.block-editor-block-mover__control-drag-handle {
			display: none;
		}
	}
}
