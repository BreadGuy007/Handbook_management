// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PanelColorSettings matches the snapshot 1`] = `
<Component
  colorSettings={
    Array [
      Object {
        "label": "border color",
        "onChange": [Function],
        "value": "#000",
      },
      Object {
        "label": "background color",
        "onChange": [Function],
        "value": "#111",
      },
    ]
  }
  colors={Array []}
  title="Test Title"
/>
`;

exports[`PanelColorSettings matches the snapshot 2`] = `
<[object Object]
  className="editor-panel-color-settings"
  title={
    <span
      className="editor-panel-color-settings__panel-title"
    >
      Test Title
      <ColorIndicator
        aria-label="(border color: #000)"
        colorValue="#000"
      />
      <ColorIndicator
        aria-label="(background color: #111)"
        colorValue="#111"
      />
    </span>
  }
>
  <WithColorContext(IfCondition(ColorPaletteControl))
    colors={Array []}
    key="0"
    label="border color"
    onChange={[Function]}
    value="#000"
  />
  <WithColorContext(IfCondition(ColorPaletteControl))
    colors={Array []}
    key="1"
    label="background color"
    onChange={[Function]}
    value="#111"
  />
</[object Object]>
`;

exports[`PanelColorSettings should render a color panel if at least one setting specifies some colors to choose 1`] = `
<Component
  colorSettings={
    Array [
      Object {
        "colors": Array [
          Object {
            "color": "#ff0000",
            "name": "Red",
            "slug": "red",
          },
        ],
        "label": "border color",
        "onChange": [Function],
        "value": "#000",
      },
      Object {
        "label": "background color",
        "onChange": [Function],
        "value": "#111",
      },
    ]
  }
  colors={Array []}
  disableCustomColors={true}
  title="Test Title"
/>
`;

exports[`PanelColorSettings should render a color panel if at least one setting specifies some colors to choose 2`] = `
<[object Object]
  className="editor-panel-color-settings"
  title={
    <span
      className="editor-panel-color-settings__panel-title"
    >
      Test Title
      <ColorIndicator
        aria-label="(border color: #000)"
        colorValue="#000"
      />
      <ColorIndicator
        aria-label="(background color: #111)"
        colorValue="#111"
      />
    </span>
  }
>
  <WithColorContext(IfCondition(ColorPaletteControl))
    colors={
      Array [
        Object {
          "color": "#ff0000",
          "name": "Red",
          "slug": "red",
        },
      ]
    }
    disableCustomColors={true}
    key="0"
    label="border color"
    onChange={[Function]}
    value="#000"
  />
  <WithColorContext(IfCondition(ColorPaletteControl))
    colors={Array []}
    disableCustomColors={true}
    key="1"
    label="background color"
    onChange={[Function]}
    value="#111"
  />
</[object Object]>
`;

exports[`PanelColorSettings should render a color panel if at least one setting supports custom colors 1`] = `
<Component
  colorSettings={
    Array [
      Object {
        "label": "border color",
        "onChange": [Function],
        "value": "#000",
      },
      Object {
        "disableCustomColors": false,
        "label": "background color",
        "onChange": [Function],
        "value": "#111",
      },
    ]
  }
  colors={Array []}
  disableCustomColors={true}
  title="Test Title"
/>
`;

exports[`PanelColorSettings should render a color panel if at least one setting supports custom colors 2`] = `
<[object Object]
  className="editor-panel-color-settings"
  title={
    <span
      className="editor-panel-color-settings__panel-title"
    >
      Test Title
      <ColorIndicator
        aria-label="(border color: #000)"
        colorValue="#000"
      />
      <ColorIndicator
        aria-label="(background color: #111)"
        colorValue="#111"
      />
    </span>
  }
>
  <WithColorContext(IfCondition(ColorPaletteControl))
    colors={Array []}
    disableCustomColors={true}
    key="0"
    label="border color"
    onChange={[Function]}
    value="#000"
  />
  <WithColorContext(IfCondition(ColorPaletteControl))
    colors={Array []}
    disableCustomColors={false}
    key="1"
    label="background color"
    onChange={[Function]}
    value="#111"
  />
</[object Object]>
`;
