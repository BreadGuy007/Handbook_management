// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContrastChecker should render component when the colors do not meet AA WCAG guidelines. 1`] = `
<ContrastChecker
  backgroundColor="#666"
  fallbackBackgroundColor="#fff"
  fallbackTextColor="#000"
  isLargeText={true}
  textColor="#666"
>
  <ContrastCheckerMessage
    backgroundColor="#666"
    textColor="#666"
    tinyBackgroundColor={
      Object {
        "_a": 1,
        "_b": 102,
        "_format": "hex",
        "_g": 102,
        "_gradientType": undefined,
        "_ok": true,
        "_originalInput": "#666",
        "_r": 102,
        "_roundA": 1,
        "_tc_id": 31,
      }
    }
    tinyTextColor={
      Object {
        "_a": 1,
        "_b": 102,
        "_format": "hex",
        "_g": 102,
        "_gradientType": undefined,
        "_ok": true,
        "_originalInput": "#666",
        "_r": 102,
        "_roundA": 1,
        "_tc_id": 32,
      }
    }
  >
    <div
      className="block-editor-contrast-checker"
    >
      <Notice
        isDismissible={false}
        status="warning"
      >
        <div
          className="components-notice is-warning"
        >
          <div
            className="components-notice__content"
          >
            This color combination may be hard for people to read. Try using a brighter background color and/or a darker text color.
          </div>
        </div>
      </Notice>
    </div>
  </ContrastCheckerMessage>
</ContrastChecker>
`;

exports[`ContrastChecker should render different message matching snapshot when background color has less brightness than text color. 1`] = `
<ContrastChecker
  backgroundColor="#555"
  fallbackBackgroundColor="#fff"
  fallbackTextColor="#000"
  isLargeText={false}
  textColor="#666"
>
  <ContrastCheckerMessage
    backgroundColor="#555"
    textColor="#666"
    tinyBackgroundColor={
      Object {
        "_a": 1,
        "_b": 85,
        "_format": "hex",
        "_g": 85,
        "_gradientType": undefined,
        "_ok": true,
        "_originalInput": "#555",
        "_r": 85,
        "_roundA": 1,
        "_tc_id": 37,
      }
    }
    tinyTextColor={
      Object {
        "_a": 1,
        "_b": 102,
        "_format": "hex",
        "_g": 102,
        "_gradientType": undefined,
        "_ok": true,
        "_originalInput": "#666",
        "_r": 102,
        "_roundA": 1,
        "_tc_id": 38,
      }
    }
  >
    <div
      className="block-editor-contrast-checker"
    >
      <Notice
        isDismissible={false}
        status="warning"
      >
        <div
          className="components-notice is-warning"
        >
          <div
            className="components-notice__content"
          >
            This color combination may be hard for people to read. Try using a darker background color and/or a brighter text color.
          </div>
        </div>
      </Notice>
    </div>
  </ContrastCheckerMessage>
</ContrastChecker>
`;

exports[`ContrastChecker should render messages when the textColor is valid, but the fallback backgroundColor conflicts. 1`] = `
<ContrastChecker
  fallbackBackgroundColor="#000000"
  textColor="#000000"
>
  <ContrastCheckerMessage
    textColor="#000000"
    tinyBackgroundColor={
      Object {
        "_a": 1,
        "_b": 0,
        "_format": "hex",
        "_g": 0,
        "_gradientType": undefined,
        "_ok": true,
        "_originalInput": "#000000",
        "_r": 0,
        "_roundA": 1,
        "_tc_id": 53,
      }
    }
    tinyTextColor={
      Object {
        "_a": 1,
        "_b": 0,
        "_format": "hex",
        "_g": 0,
        "_gradientType": undefined,
        "_ok": true,
        "_originalInput": "#000000",
        "_r": 0,
        "_roundA": 1,
        "_tc_id": 54,
      }
    }
  >
    <div
      className="block-editor-contrast-checker"
    >
      <Notice
        isDismissible={false}
        status="warning"
      >
        <div
          className="components-notice is-warning"
        >
          <div
            className="components-notice__content"
          >
            This color combination may be hard for people to read. Try using a brighter background color and/or a darker text color.
          </div>
        </div>
      </Notice>
    </div>
  </ContrastCheckerMessage>
</ContrastChecker>
`;

exports[`ContrastChecker should take into consideration the font size passed 1`] = `
<ContrastChecker
  backgroundColor="#C44B4B"
  fontSize={23}
  textColor="#000000"
>
  <ContrastCheckerMessage
    backgroundColor="#C44B4B"
    textColor="#000000"
    tinyBackgroundColor={
      Object {
        "_a": 1,
        "_b": 75,
        "_format": "hex",
        "_g": 75,
        "_gradientType": undefined,
        "_ok": true,
        "_originalInput": "#C44B4B",
        "_r": 196,
        "_roundA": 1,
        "_tc_id": 43,
      }
    }
    tinyTextColor={
      Object {
        "_a": 1,
        "_b": 0,
        "_format": "hex",
        "_g": 0,
        "_gradientType": undefined,
        "_ok": true,
        "_originalInput": "#000000",
        "_r": 0,
        "_roundA": 1,
        "_tc_id": 44,
      }
    }
  >
    <div
      className="block-editor-contrast-checker"
    >
      <Notice
        isDismissible={false}
        status="warning"
      >
        <div
          className="components-notice is-warning"
        >
          <div
            className="components-notice__content"
          >
            This color combination may be hard for people to read. Try using a brighter background color and/or a darker text color.
          </div>
        </div>
      </Notice>
    </div>
  </ContrastCheckerMessage>
</ContrastChecker>
`;

exports[`ContrastChecker should take into consideration wherever text is large or not 1`] = `
<ContrastChecker
  backgroundColor="#C44B4B"
  isLargeText={false}
  textColor="#000000"
>
  <ContrastCheckerMessage
    backgroundColor="#C44B4B"
    textColor="#000000"
    tinyBackgroundColor={
      Object {
        "_a": 1,
        "_b": 75,
        "_format": "hex",
        "_g": 75,
        "_gradientType": undefined,
        "_ok": true,
        "_originalInput": "#C44B4B",
        "_r": 196,
        "_roundA": 1,
        "_tc_id": 39,
      }
    }
    tinyTextColor={
      Object {
        "_a": 1,
        "_b": 0,
        "_format": "hex",
        "_g": 0,
        "_gradientType": undefined,
        "_ok": true,
        "_originalInput": "#000000",
        "_r": 0,
        "_roundA": 1,
        "_tc_id": 40,
      }
    }
  >
    <div
      className="block-editor-contrast-checker"
    >
      <Notice
        isDismissible={false}
        status="warning"
      >
        <div
          className="components-notice is-warning"
        >
          <div
            className="components-notice__content"
          >
            This color combination may be hard for people to read. Try using a brighter background color and/or a darker text color.
          </div>
        </div>
      </Notice>
    </div>
  </ContrastCheckerMessage>
</ContrastChecker>
`;

exports[`ContrastChecker should use isLargeText to make decisions if both isLargeText and fontSize props are passed 1`] = `
<ContrastChecker
  backgroundColor="#C44B4B"
  fontSize={24}
  isLargeText={false}
  textColor="#000000"
>
  <ContrastCheckerMessage
    backgroundColor="#C44B4B"
    textColor="#000000"
    tinyBackgroundColor={
      Object {
        "_a": 1,
        "_b": 75,
        "_format": "hex",
        "_g": 75,
        "_gradientType": undefined,
        "_ok": true,
        "_originalInput": "#C44B4B",
        "_r": 196,
        "_roundA": 1,
        "_tc_id": 49,
      }
    }
    tinyTextColor={
      Object {
        "_a": 1,
        "_b": 0,
        "_format": "hex",
        "_g": 0,
        "_gradientType": undefined,
        "_ok": true,
        "_originalInput": "#000000",
        "_r": 0,
        "_roundA": 1,
        "_tc_id": 50,
      }
    }
  >
    <div
      className="block-editor-contrast-checker"
    >
      <Notice
        isDismissible={false}
        status="warning"
      >
        <div
          className="components-notice is-warning"
        >
          <div
            className="components-notice__content"
          >
            This color combination may be hard for people to read. Try using a brighter background color and/or a darker text color.
          </div>
        </div>
      </Notice>
    </div>
  </ContrastCheckerMessage>
</ContrastChecker>
`;
