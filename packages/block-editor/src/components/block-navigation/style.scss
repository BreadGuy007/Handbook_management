$tree-border-width: 2px;
$tree-item-height: 36px;

.block-editor-block-navigation__label {
	margin: 0 0 $grid-unit-15;
	color: $gray-700;
	text-transform: uppercase;
	font-size: 11px;
	font-weight: 500;
}

.block-editor-block-navigation__container {
	padding: $grid-unit - $border-width;
}

.block-editor-block-navigation-tree {
	width: 100%;
	border-collapse: collapse;
	padding: 0;
	margin: 0;
}

.block-editor-block-navigation-leaf {
	// Use position relative for row animation.
	position: relative;

	&.is-dragging {
		display: none;
	}

	.block-editor-block-navigation-block-contents {
		display: flex;
		align-items: center;
		width: 100%;
		height: auto;
		padding: $grid-unit-15 ($grid-unit-15 / 2);
		margin-top: auto;
		margin-bottom: auto;
		text-align: left;
		color: $gray-900;
		border-radius: 2px;
		position: relative;
		white-space: nowrap;

		&.is-dropping-before::before {
			content: "";
			position: absolute;
			pointer-events: none;
			transition: border-color 0.1s linear, border-style 0.1s linear, box-shadow 0.1s linear;
			top: -2px;
			right: 0;
			left: 0;
			border-top: 4px solid var(--wp-admin-theme-color);
		}

		&.is-dropping-after::before {
			content: "";
			position: absolute;
			pointer-events: none;
			transition: border-color 0.1s linear, border-style 0.1s linear, box-shadow 0.1s linear;
			bottom: -2px;
			right: 0;
			left: 0;
			border-bottom: 4px solid var(--wp-admin-theme-color);
		}

		&.is-dropping-to-inner-blocks::before {
			content: "";
			position: absolute;
			pointer-events: none;
			transition: border-color 0.1s linear, border-style 0.1s linear, box-shadow 0.1s linear;
			bottom: -2px;
			right: 0;
			left: $icon-size;
			border-bottom: 4px solid var(--wp-admin-theme-color);
		}

		.components-modal__content & {
			padding-left: 0;
			padding-right: 0;
		}
	}

	&.is-visible .block-editor-block-navigation-block-contents {
		opacity: 1;
		@include edit-post__fade-in-animation;
	}

	.block-editor-block-icon {
		align-self: flex-start;
		margin-right: 6px;
	}

	&.is-selected .block-editor-block-icon svg,
	&.is-selected:focus .block-editor-block-icon svg {
		color: $white;
		background: $gray-900;
		box-shadow: 0 0 0 $border-width $gray-900;
		border-radius: $border-width;
	}

	.block-editor-block-navigation-block__menu-cell,
	.block-editor-block-navigation-block__mover-cell,
	.block-editor-block-navigation-block__contents-cell {
		padding-top: 0;
		padding-bottom: 0;
	}

	.block-editor-block-navigation-block__menu-cell,
	.block-editor-block-navigation-block__mover-cell {
		line-height: 0;
		width: $button-size;
		opacity: 0;
		vertical-align: top;
		@include reduce-motion("transition");

		&.is-visible {
			opacity: 1;
			@include edit-post__fade-in-animation;
		}

		&,
		.components-button.has-icon {
			width: 24px;
			min-width: 24px;
			padding: 0;
		}
	}

	.block-editor-block-navigation-block__menu-cell {
		padding-top: $grid-unit-10;
	}

	.block-editor-block-navigation-block__mover-cell-alignment-wrapper {
		display: flex;
		height: 100%;
		flex-direction: column;
		align-items: center;
	}

	// Keep the tap target large but the focus target small
	.block-editor-block-mover-button {
		position: relative;
		width: $button-size;
		height: $button-size-small;

		// Position the icon
		svg {
			position: relative;
			height: $button-size-small;
		}

		&.is-up-button {
			align-items: flex-end;
			svg {
				bottom: -4px;
			}
		}

		&.is-down-button {
			align-items: flex-start;
			svg {
				top: -4px;
			}
		}

		// Don't show the focus inherited by the Button component.
		&:focus:enabled {
			box-shadow: none;
			outline: none;
		}

		// Focus style.
		&:focus {
			box-shadow: none;
			outline: none;
		}

		&:focus::before {
			@include block-toolbar-button-style__focus();
		}

		// Focus and toggle pseudo elements.
		&::before {
			content: "";
			position: absolute;
			display: block;
			border-radius: $radius-block-ui;
			height: 16px;
			min-width: 100%;

			// Position the focus rectangle.
			left: 0;
			right: 0;

			// Animate in.
			animation: components-button__appear-animation 0.1s ease;
			animation-fill-mode: forwards;
			@include reduce-motion("animation");
		}
	}

	.block-editor-inserter__toggle {
		background: $gray-900;
		color: $white;
		height: $grid-unit-30;
		margin: 6px 6px 6px 1px;
		min-width: $grid-unit-30;

		&:active {
			color: $white;
		}
	}
}

.block-editor-block-navigation-block-slot__description,
.block-editor-block-navigation-block-select-button__description,
.block-editor-block-navigation-appender__description {
	display: none;
}

.block-editor-block-navigation-block__contents-cell,
.block-editor-block-navigation-appender__cell {
	.block-editor-block-navigation-block__contents-container,
	.block-editor-block-navigation-appender__container {
		display: flex;
	}

	.block-editor-block-navigation-block__contents-container {
		min-height: $grid-unit-60;
	}

	.block-editor-block-navigator-descender-line {
		position: relative;
		flex-shrink: 0;
		width: ( $button-size / 2 ) + 6px;

		&:first-child {
			width: ( $button-size / 2 );
		}

		&.has-item {
			margin-right: 6px;
		}

		// Draw a vertical line using border-right.
		&::before {
			content: "";
			display: block;
			position: absolute;
			top: 1px;
			bottom: -2px;
			right: -1px;
			border-right: 2px solid $gray-600;
		}

		// If a vertical line has terminated, don't draw it.
		&.is-terminated::before {
			border-color: transparent;
		}

		// Make the last vertical line half-height.
		&.has-item.is-last-row {
			height: 26px;
		}

		// Draw a horizontal line using border-bottom.
		&.has-item::after {
			content: "";
			display: block;
			position: absolute;
			top: 26px;
			left: 100%;
			width: 5px;
			border-bottom: 2px solid $gray-600;
		}
	}
}

// Position the horizontal line in the middle of appender's height
.block-editor-block-navigation-appender__cell .block-editor-block-navigator-descender-line {
	&.has-item.is-last-row {
		height: $grid-unit-20;
		&::after {
			top: 100%;
		}
	}
}
