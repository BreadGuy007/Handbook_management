name: Build Gutenberg Plugin Zip

on:
  pull_request:
    paths-ignore:
    - '**.md'
  push:
    branches: [master]
    tags:
      - 'v*'
    paths-ignore:
    - '**.md'

jobs:
  build:
    name: Build Release Artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Build Gutenberg plugin ZIP file
        run: ./bin/build-plugin-zip.sh
        env:
          NO_CHECKS: 'true'

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: gutenberg-plugin
          path: ./gutenberg.zip

  create-release:
    name: Create Release Draft and Attach Asset
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Set Release Version
        id: get_release_version
        run: echo ::set-output name=version::$(echo $GITHUB_REF | cut -d / -f 3 | sed s/^v// | sed 's/-rc./ RC/' )

      - name: Download Plugin Zip Artifact
        uses: actions/download-artifact@v2
        with:
          name: gutenberg-plugin

      - name: Extract Changelog for Release
        run: |
          unzip gutenberg.zip changelog.txt
          CHANGELOG_REGEX="/=\s[0-9]+\.[0-9]+\.[0-9]+(-rc\.[0-9]+)?\s=/"
          awk -i inplace "$CHANGELOG_REGEX"'{p++;next} p==2{exit} p>=1' changelog.txt

      - name: Create Release Draft
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.get_release_version.outputs.version }}
          draft: true
          prerelease: ${{ contains(github.ref, 'rc') }}
          body_path: changelog.txt

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gutenberg.zip
          asset_name: gutenberg.zip
          asset_content_type: application/zip

      - name: Publish Release
        run: |
          curl \
            --request PATCH \
            --url https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }} \
            --header 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' \
            --header "Accept: application/vnd.github.v3+json" \
            --data-raw '{"draft":false}'