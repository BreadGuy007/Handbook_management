name: Unit Tests

# Since Unit Tests are required to pass for each PR,
# we cannot disable them for documentation-only changes.
on:
    pull_request:
    push:
        branches:
            - trunk
            - 'release/**'
            - 'wp/**'

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
    # The concurrency group contains the workflow name and the branch name for pull requests
    # or the commit hash for any other events.
    group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
    cancel-in-progress: true

jobs:
    unit-js:
        name: JavaScript
        runs-on: ubuntu-latest
        if: ${{ github.repository == 'WordPress/gutenberg' || github.event_name == 'pull_request' }}

        strategy:
            fail-fast: false
            matrix:
                node: ['12', '14']

        steps:
            - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4

            - name: Use desired version of NodeJS
              uses: actions/setup-node@38d90ce44d5275ad62cc48384b3d8a58c500bb5f # v2.2.2
              with:
                  node-version: ${{ matrix.node }}
                  cache: npm

            - name: Npm install and build
              # It's not necessary to run the full build, since Jest can interpret
              # source files with `babel-jest`. Some packages have their own custom
              # build tasks, however. These must be run.
              run: |
                  npm ci
                  npx lerna run build

            - name: Running the tests
              run: npm run test-unit -- --ci --maxWorkers=2 --cacheDirectory="$HOME/.jest-cache"

            - name: Running the date tests
              run: npm run test-unit:date -- --ci --maxWorkers=2 --cacheDirectory="$HOME/.jest-cache"

    unit-php:
        name: PHP
        runs-on: ubuntu-latest
        if: ${{ github.repository == 'WordPress/gutenberg' || github.event_name == 'pull_request' }}

        steps:
            - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4

            - name: Use desired version of NodeJS
              uses: actions/setup-node@38d90ce44d5275ad62cc48384b3d8a58c500bb5f # v2.2.2
              with:
                  node-version: 14
                  cache: npm

            - name: Npm install and build
              run: |
                  npm ci
                  npm run build

            - name: Install WordPress
              run: |
                  npm run wp-env start

            - name: Running lint check
              run: npm run lint-php

            - name: Running single site unit tests
              run: npm run test-unit-php
              if: ${{ success() || failure() }}

            - name: Running multisite unit tests
              run: npm run test-unit-php-multisite
              if: ${{ success() || failure() }}

    mobile-unit-js:
        name: Mobile
        runs-on: ubuntu-latest
        if: ${{ github.repository == 'WordPress/gutenberg' || github.event_name == 'pull_request' }}

        steps:
            - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4

            - name: Use desired version of NodeJS
              uses: actions/setup-node@38d90ce44d5275ad62cc48384b3d8a58c500bb5f # v2.2.2
              with:
                  node-version: 14
                  cache: npm

            - name: Npm install and build
              # It's not necessary to run the full build, since Jest can interpret
              # source files with `babel-jest`. Some packages have their own custom
              # build tasks, however. These must be run.
              run: |
                  npm ci
                  npx lerna run build

            - name: Running the tests
              run: npm run test-unit:native -- --ci --maxWorkers=2 --cacheDirectory="$HOME/.jest-cache"
