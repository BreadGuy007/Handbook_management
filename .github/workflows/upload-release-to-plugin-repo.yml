name: Update Changelog and upload Gutenberg plugin to WordPress.org plugin repo

on:
    release:
        types: [published]

jobs:
    get-release-branch:
        name: Get release branch name
        runs-on: ubuntu-latest
        if: github.event.release.assets[0]
        outputs:
            release_branch: ${{ steps.get_release_branch.outputs.release_branch }}
        steps:
            - name: Compute release branch name
              id: get_release_branch
              env:
                  TAG: ${{ github.event.release.tag_name }}
              run: |
                  IFS='.' read -r -a VERSION_ARRAY <<< "${TAG#v}"
                  RELEASE_BRANCH="release/${VERSION_ARRAY[0]}.${VERSION_ARRAY[1]}"
                  echo "::set-output name=release_branch::$(echo $RELEASE_BRANCH)"

    update-changelog:
        name: Update Changelog on ${{ matrix.branch }} branch
        runs-on: ubuntu-latest
        if: github.event.release.assets[0]
        needs: get-release-branch
        env:
            TAG: ${{ github.event.release.tag_name }}
        strategy:
            matrix:
                include:
                    - branch: trunk
                      label: trunk
                    - branch: ${{ needs.get-release-branch.outputs.release_branch }}
                      label: release
        steps:
            - name: Checkout code
              uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4
              with:
                  ref: ${{ matrix.branch }}
                  token: ${{ secrets.GUTENBERG_TOKEN }}

            - name: Update the Changelog to include the release notes
              run: |
                  # First, determine where to insert the new Changelog entry.
                  SERIES="${RELEASE_BRANCH#release/}"
                  SERIES_REGEX="=\s${SERIES}\.[0-9]+\s="
                  CUT_MARKS=$( grep -nP -m 1 "${SERIES_REGEX}" changelog.txt | cut -d: -f1 )
                  if [[ -z "${CUT_MARKS}" ]]; then
                    CHANGELOG_REGEX="=\s[0-9]+\.[0-9]+\.[0-9]+(-rc\.[0-9]+)?\s="
                    RC_REGEX="=\s${TAG#v}(-rc\.[0-9]+)?\s="
                    CUT_MARKS=$( awk "/${RC_REGEX}/ {print NR; next}; /${CHANGELOG_REGEX}/ {print NR; exit}" changelog.txt )
                  fi
                  BEFORE=$( echo "$CUT_MARKS" | head -n 1 )
                  AFTER=$( echo "$CUT_MARKS" | tail -n 1 )
                  # Okay, we have all we need to build the new Changelog.
                  head -n $(( "${BEFORE}" - 1 )) changelog.txt > new_changelog.txt
                  printf '= %s =\n\n' "${TAG#v}" >> new_changelog.txt
                  # Need to use a heredoc in order to preserve special characters.
                  cat <<- "EOF" > release_notes.txt
                  ${{ github.event.release.body }}
                  EOF
                  # Normalize empty lines: Trim them from beginning and end of file...
                  awk 'NF {p=1} p' <<< "$(< release_notes.txt)" >> new_changelog.txt
                  # ...then add two empty lines at the end.
                  printf '\n\n' >> new_changelog.txt
                  tail -n +"${AFTER}" changelog.txt >> new_changelog.txt
                  mv new_changelog.txt changelog.txt

            - name: Configure git user name and email
              run: |
                  git config user.name "Gutenberg Repository Automation"
                  git config user.email gutenberg@wordpress.org

            - name: Commit the Changelog update
              run: |
                  git add changelog.txt
                  git commit -m "Update Changelog for ${TAG#v}"
                  git push --set-upstream origin "${{ matrix.branch }}"

            - name: Upload Changelog artifact
              uses: actions/upload-artifact@e448a9b857ee2131e752b06002bf0e093c65e571 # v2.2.2
              with:
                  name: changelog ${{ matrix.label }}
                  path: ./changelog.txt

    upload:
        name: Upload Gutenberg Plugin
        runs-on: ubuntu-latest
        environment: wp.org plugin
        needs: update-changelog
        if: ${{ !github.event.release.prerelease && github.event.release.assets[0] }}
        env:
            PLUGIN_REPO_URL: 'https://plugins.svn.wordpress.org/gutenberg'
            STABLE_VERSION_REGEX: '[0-9]\+\.[0-9]\+\.[0-9]\+\s*'
            SVN_USERNAME: ${{ secrets.svn_username }}
            SVN_PASSWORD: ${{ secrets.svn_password }}
            VERSION: ${{ github.event.release.name }}
        steps:
            - name: Check out Gutenberg trunk from WP.org plugin repo
              run: svn checkout "$PLUGIN_REPO_URL/trunk"

            - name: Get previous stable version
              id: get_previous_stable_version
              run: echo ::set-output name=stable_version::$(awk -F ':\ ' '$1 == "Stable tag" {print $2}' ./trunk/readme.txt)

            - name: Delete everything
              working-directory: ./trunk
              run: find . -maxdepth 1 -not -name ".svn" -not -name "." -not -name ".." -exec rm -rf {} +

            - name: Download and unzip Gutenberg plugin asset into trunk folder
              env:
                  PLUGIN_URL: ${{ github.event.release.assets[0].browser_download_url }}
              run: |
                  curl -L -o gutenberg.zip $PLUGIN_URL
                  unzip gutenberg.zip -d trunk
                  rm gutenberg.zip

            - name: Replace the stable tag placeholder with the existing stable tag on the SVN repository
              env:
                  STABLE_TAG_PLACEHOLDER: 'Stable tag: V\.V\.V'
                  STABLE_TAG: 'Stable tag: ${{ steps.get_previous_stable_version.outputs.stable_version }}'
              run: sed -i "s/${STABLE_TAG_PLACEHOLDER}/${STABLE_TAG}/g" ./trunk/readme.txt

            - name: Download Changelog Artifact
              uses: actions/download-artifact@4a7a711286f30c025902c28b541c10e147a9b843 # v2.0.8
              with:
                  name: changelog trunk
                  path: trunk

            - name: Commit the content changes
              working-directory: ./trunk
              run: |
                  svn st | grep '^?' | awk '{print $2}' | xargs -r svn add
                  svn st | grep '^!' | awk '{print $2}' | xargs -r svn rm
                  svn commit -m "Committing version $VERSION" \
                   --no-auth-cache --non-interactive  --username "$SVN_USERNAME" --password "$SVN_PASSWORD"

            - name: Create the SVN tag
              working-directory: ./trunk
              run: |
                  svn copy "$PLUGIN_REPO_URL/trunk" "$PLUGIN_REPO_URL/tags/$VERSION" -m "Tagging version $VERSION" \
                   --no-auth-cache --non-interactive  --username "$SVN_USERNAME" --password "$SVN_PASSWORD"

            - name: Update the plugin's stable version
              working-directory: ./trunk
              run: |
                  sed -i "s/Stable tag: ${STABLE_VERSION_REGEX}/Stable tag: ${VERSION}/g" ./readme.txt
                  svn commit -m "Releasing version $VERSION" \
                   --no-auth-cache --non-interactive  --username "$SVN_USERNAME" --password "$SVN_PASSWORD"
