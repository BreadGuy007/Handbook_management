dist: trusty

language: generic

services:
  - docker

notifications:
  email:
    on_success: never
    on_failure: change

cache:
  directories:
    - $HOME/.composer/cache
    - $HOME/.jest-cache
    - $HOME/.npm
    - $HOME/.nvm/.cache

branches:
  only:
    - master
    - rnmobile/master
    - rnmobile/releases
    - /wp\/.*/

env:
  global:
    - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
    - WP_DEVELOP_DIR: ./wordpress
    - LOCAL_SCRIPT_DEBUG: false
    - INSTALL_COMPOSER: false
    - INSTALL_WORDPRESS: true

before_install:
  - nvm install --latest-npm
  - |
    if [[ "$INSTALL_WORDPRESS" = "true" ]]; then
      # Upgrade docker-compose.
      sudo rm /usr/local/bin/docker-compose
      curl -sL https://github.com/docker/compose/releases/download/1.24.0/docker-compose-`uname -s`-`uname -m` > docker-compose
      chmod +x docker-compose
      sudo mv docker-compose /usr/local/bin
    fi

install:
  # Build Gutenberg.
  - npm ci
  - npm run build
  - |
    if [[ "$INSTALL_WORDPRESS" = "true" ]]; then
      # Download and unpack WordPress.
      curl -sL https://wordpress.org/nightly-builds/wordpress-latest.zip -o /tmp/wordpress-latest.zip
      unzip -q /tmp/wordpress-latest.zip -d /tmp
      mkdir -p wordpress/src
      mv /tmp/wordpress/* wordpress/src

      # Create the upload directory with permissions that Travis can handle.
      mkdir -p wordpress/src/wp-content/uploads
      chmod 767 wordpress/src/wp-content/uploads

      # Grab the tools we need for WordPress' local-env.
      curl -sL https://github.com/WordPress/wordpress-develop/archive/master.zip -o /tmp/wordpress-develop.zip
      unzip -q /tmp/wordpress-develop.zip -d /tmp
      mv \
        /tmp/wordpress-develop-master/tools \
        /tmp/wordpress-develop-master/tests \
        /tmp/wordpress-develop-master/.env \
        /tmp/wordpress-develop-master/docker-compose.yml \
        /tmp/wordpress-develop-master/wp-cli.yml \
        /tmp/wordpress-develop-master/*config-sample.php \
        /tmp/wordpress-develop-master/package.json wordpress

      # Install WordPress.
      cd wordpress
      npm install dotenv wait-on
      npm run env:start
      sleep 10
      npm run env:install
      cd ..

      # Connect Gutenberg to WordPress.
      npm run env connect
      npm run env cli plugin activate gutenberg
    fi
  - |
    if [[ "$INSTALL_COMPOSER" = "true" ]]; then
      npm run env docker-run -- php composer install
    fi
  - |
    if [[ "$E2E_ROLE" = "author" ]]; then
      npm run env cli -- user create author author@example.com --role=author --user_pass=authpass
      npm run env cli -- post update 1 --post_author=2
    fi

jobs:
  include:
    - name: Lint
      install:
        - npm ci
      script:
        - npm run lint

    - name: Build artifacts
      install:
        # A "full" install is executed, since `npm ci` does not always exit
        # with an error status code if the lock file is inaccurate.
        #
        # See: https://github.com/WordPress/gutenberg/issues/16157
        - npm install
      script:
        - npm run check-local-changes

    - name: License compatibility
      install:
        - npm ci
      script:
        - npm run check-licenses

    - name: JavaScript unit tests
      env: INSTALL_WORDPRESS=false
      install:
        - npm ci
        # It's not necessary to run the full build, since Jest can interpret
        # source files with `babel-jest`. Some packages have their own custom
        # build tasks, however. These must be run.
        - npx lerna run build
      script:
        - npm run test-unit -- --ci --maxWorkers=2 --cacheDirectory="$HOME/.jest-cache"

    - name: JavaScript native mobile tests
      install:
        - npm ci
        # It's not necessary to run the full build, since Jest can interpret
        # source files with `babel-jest`. Some packages have their own custom
        # build tasks, however. These must be run.
        - npx lerna run build
      script:
        - npm run test-unit:native -- --ci --maxWorkers=2 --cacheDirectory="$HOME/.jest-cache"

    - name: PHP unit tests
      env: INSTALL_COMPOSER=true
      script:
        - npm run test-php && npm run test-unit-php-multisite

    - name: PHP unit tests (PHP 5.6)
      env: INSTALL_COMPOSER=true LOCAL_PHP=5.6-fpm
      script:
        - npm run test-php && npm run test-unit-php-multisite

    - name: E2E tests (Admin) (1/4)
      env: FORCE_REDUCED_MOTION=true PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=
      script:
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --listTests > ~/.jest-e2e-tests
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --cacheDirectory="$HOME/.jest-cache" --runTestsByPath $( awk 'NR % 4 == 0' < ~/.jest-e2e-tests )

    - name: E2E tests (Admin) (2/4)
      env: FORCE_REDUCED_MOTION=true PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=
      script:
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --listTests > ~/.jest-e2e-tests
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --cacheDirectory="$HOME/.jest-cache" --runTestsByPath $( awk 'NR % 4 == 1' < ~/.jest-e2e-tests )

    - name: E2E tests (Admin) (3/4)
      env: FORCE_REDUCED_MOTION=true PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=
      script:
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --listTests > ~/.jest-e2e-tests
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --cacheDirectory="$HOME/.jest-cache" --runTestsByPath $( awk 'NR % 4 == 2' < ~/.jest-e2e-tests )

    - name: E2E tests (Admin) (4/4)
      env: FORCE_REDUCED_MOTION=true PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=
      script:
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --listTests > ~/.jest-e2e-tests
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --cacheDirectory="$HOME/.jest-cache" --runTestsByPath $( awk 'NR % 4 == 3' < ~/.jest-e2e-tests )

    - name: E2E tests (Author) (1/4)
      env: E2E_ROLE=author FORCE_REDUCED_MOTION=true PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=
      script:
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --listTests > ~/.jest-e2e-tests
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --cacheDirectory="$HOME/.jest-cache" --runTestsByPath $( awk 'NR % 4 == 0' < ~/.jest-e2e-tests )

    - name: E2E tests (Author) (2/4)
      env: E2E_ROLE=author FORCE_REDUCED_MOTION=true PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=
      script:
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --listTests > ~/.jest-e2e-tests
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --cacheDirectory="$HOME/.jest-cache" --runTestsByPath $( awk 'NR % 4 == 1' < ~/.jest-e2e-tests )

    - name: E2E tests (Author) (3/4)
      env: E2E_ROLE=author FORCE_REDUCED_MOTION=true PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=
      script:
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --listTests > ~/.jest-e2e-tests
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --cacheDirectory="$HOME/.jest-cache" --runTestsByPath $( awk 'NR % 4 == 2' < ~/.jest-e2e-tests )

    - name: E2E tests (Author) (4/4)
      env: E2E_ROLE=author FORCE_REDUCED_MOTION=true PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=
      script:
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --listTests > ~/.jest-e2e-tests
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --cacheDirectory="$HOME/.jest-cache" --runTestsByPath $( awk 'NR % 4 == 3' < ~/.jest-e2e-tests )

    - stage: deploy
      if: branch = master
      name: Deploy Playground
      env: INSTALL_WORDPRESS=false
      install:
        - npm ci
      before_deploy:
        - npm run storybook:build
      deploy:
        provider: pages
        skip_cleanup: true
        github_token: $GITHUB_TOKEN
        keep_history: true
        local_dir: playground/dist
        on:
          branch: master

  allow_failures:
    - name: JavaScript native mobile tests
