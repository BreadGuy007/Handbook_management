language: generic

services:
  - docker

notifications:
  email:
    on_success: never
    on_failure: change

cache:
  directories:
    - $HOME/.composer/cache
    - $HOME/.jest-cache
    - $HOME/.npm
    - $HOME/.nvm/.cache

branches:
  only:
    - master
    - rnmobile/master
    - /rnmobile\/release.*/
    - /wp\/.*/

env:
  global:
    - WP_DEVELOP_DIR: ./wordpress
    - LOCAL_SCRIPT_DEBUG: false
    - INSTALL_WORDPRESS: true

# Make sure NodeGit gets the correct C libs.
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - libstdc++-4.9-dev

before_install:
  - nvm install --latest-npm
  - |
    if [[ "$INSTALL_WORDPRESS" = "true" ]]; then
      # Upgrade docker-compose.
      sudo rm /usr/local/bin/docker-compose
      curl -sL https://github.com/docker/compose/releases/download/1.24.0/docker-compose-`uname -s`-`uname -m` > docker-compose
      chmod +x docker-compose
      sudo mv docker-compose /usr/local/bin
    fi

install:
  # Build Gutenberg.
  - npm ci
  - npm run build
  - |
    if [[ "$INSTALL_WORDPRESS" = "true" ]]; then
      echo '{ "config": { "SCRIPT_DEBUG": false, "WP_PHP_BINARY": "php", "WP_TESTS_EMAIL": "admin@example.org", "WP_TESTS_TITLE": "Test Blog" } }' > .wp-env.override.json
      chmod -R 767 ./ # TODO: Possibly integrate in wp-env
      npm run wp-env start
    fi
  - |
    if [[ "$E2E_ROLE" = "author" ]]; then
      npm run wp-env run tests-cli "wp user create author author@example.com --role=author --user_pass=authpass"
      npm run wp-env run tests-cli "wp post update 1 --post_author=2"
    fi

jobs:
  include:
    - name: JavaScript unit tests
      env: INSTALL_WORDPRESS=false
      install:
        - npm ci
        # It's not necessary to run the full build, since Jest can interpret
        # source files with `babel-jest`. Some packages have their own custom
        # build tasks, however. These must be run.
        - npx lerna run build
      script:
        - npm run test-unit -- --ci --maxWorkers=2 --cacheDirectory="$HOME/.jest-cache"

    - name: JavaScript native mobile tests
      install:
        - npm ci
        # It's not necessary to run the full build, since Jest can interpret
        # source files with `babel-jest`. Some packages have their own custom
        # build tasks, however. These must be run.
        - npx lerna run build
      script:
        - npm run test-unit:native -- --ci --maxWorkers=2 --cacheDirectory="$HOME/.jest-cache"

    - name: PHP unit tests
      script:
        - npm run test-php && npm run test-unit-php-multisite

    - name: PHP unit tests (PHP 5.6)
      env: LOCAL_PHP=5.6-fpm
      script:
        - npm run test-php && npm run test-unit-php-multisite

    - name: E2E tests (Admin) (1/4)
      env: FORCE_REDUCED_MOTION=true
      script:
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --listTests > ~/.jest-e2e-tests
        - travis_wait 30 $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --cacheDirectory="$HOME/.jest-cache" --runTestsByPath $( awk 'NR % 4 == 0' < ~/.jest-e2e-tests )

    - name: E2E tests (Admin) (2/4)
      env: FORCE_REDUCED_MOTION=true
      script:
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --listTests > ~/.jest-e2e-tests
        - travis_wait 30 $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --cacheDirectory="$HOME/.jest-cache" --runTestsByPath $( awk 'NR % 4 == 1' < ~/.jest-e2e-tests )

    - name: E2E tests (Admin) (3/4)
      env: FORCE_REDUCED_MOTION=true
      script:
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --listTests > ~/.jest-e2e-tests
        - travis_wait 30 $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --cacheDirectory="$HOME/.jest-cache" --runTestsByPath $( awk 'NR % 4 == 2' < ~/.jest-e2e-tests )

    - name: E2E tests (Admin) (4/4)
      env: FORCE_REDUCED_MOTION=true
      script:
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --listTests > ~/.jest-e2e-tests
        - travis_wait 30 $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --cacheDirectory="$HOME/.jest-cache" --runTestsByPath $( awk 'NR % 4 == 3' < ~/.jest-e2e-tests )

    - name: E2E tests (Author) (1/4)
      env: E2E_ROLE=author FORCE_REDUCED_MOTION=true
      script:
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --listTests > ~/.jest-e2e-tests
        - travis_wait 30 $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --cacheDirectory="$HOME/.jest-cache" --runTestsByPath $( awk 'NR % 4 == 0' < ~/.jest-e2e-tests )

    - name: E2E tests (Author) (2/4)
      env: E2E_ROLE=author FORCE_REDUCED_MOTION=true
      script:
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --listTests > ~/.jest-e2e-tests
        - travis_wait 30 $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --cacheDirectory="$HOME/.jest-cache" --runTestsByPath $( awk 'NR % 4 == 1' < ~/.jest-e2e-tests )

    - name: E2E tests (Author) (3/4)
      env: E2E_ROLE=author FORCE_REDUCED_MOTION=true
      script:
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --listTests > ~/.jest-e2e-tests
        - travis_wait 30 $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --cacheDirectory="$HOME/.jest-cache" --runTestsByPath $( awk 'NR % 4 == 2' < ~/.jest-e2e-tests )

    - name: E2E tests (Author) (4/4)
      env: E2E_ROLE=author FORCE_REDUCED_MOTION=true
      script:
        - $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --listTests > ~/.jest-e2e-tests
        - travis_wait 30 $( npm bin )/wp-scripts test-e2e --config=./packages/e2e-tests/jest.config.js --cacheDirectory="$HOME/.jest-cache" --runTestsByPath $( awk 'NR % 4 == 3' < ~/.jest-e2e-tests )

  allow_failures:
    # nothing is allowed to fail at the moment
